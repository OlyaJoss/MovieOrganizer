{"version":3,"sources":["redux/reducer.js","redux/store.js","components/Header/Header.js","redux/actions.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","index.js"],"names":["initialState","allMovies","Search","favMovies","inputValue","reducer","state","action","type","payload","data","find","item","imdbID","newItem","newFav","filter","createStore","applyMiddleware","thunk","Header","className","Component","fetchMovies","query","dispatch","fetch","then","res","json","console","log","resData","SearchBox","searchBoxSubmitHandler","e","preventDefault","props","this","onSubmit","value","placeholder","onChange","onSearchUpdate","target","disabled","connect","MovieItem","Title","Year","Poster","src","alt","onClick","addToFav","some","el","id","Movies","map","movie","key","Favorites","savedLists","listTitle","saveList","method","headers","body","JSON","stringify","setState","oldState","name","title","clearFav","catch","error","titleChange","delFav","length","href","rel","MainPage","ListPage","favListId","favListTitle","favListMovies","fetchList","movies","listMovies","getMovies","Promise","all","list","match","params","App","path","exact","component","React","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.841919f3.chunk.js","sourcesContent":["const initialState = {\n  allMovies: {\n    Search: []\n  },\n  favMovies: [],\n  inputValue: ''\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'FETCH_RES':\n      return {\n        ...state,\n        allMovies: action.payload.data\n      }\n    case 'ON_SEARCH_UPDATE':\n      return {\n        ...state,\n        inputValue: action.payload.data\n      }\n    case 'ADD_TO_FAV':\n\n      if (state.favMovies.find((item) => item.imdbID === action.payload.data)) {\n        return {\n          ...state\n        }\n      }\n      const newItem = state.allMovies.Search.find((item) => item.imdbID === action.payload.data);\n      return {\n        ...state,\n        favMovies: [...state.favMovies, {...newItem}]\n      }\n\n    case 'CLEAR_FAV':\n        return {\n          ...state,\n          favMovies: []\n        }\n\n    case 'DEL_FAV':\n      const newFav = state.favMovies.filter((item) => item.imdbID !== action.payload.data)\n      return {\n        ...state,\n        favMovies: newFav\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\"\n\nexport default createStore(reducer, applyMiddleware(thunk))\n\n","import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() { \n        return (\n            <header className=\"header\">\n                <h1 className=\"header__title\">\n                    MustSee\n                </h1>\n            </header>\n        );\n    }\n}\n \nexport default Header;","export function addToFav(favMovie) {\n  return {\n    type: 'ADD_TO_FAV',\n    payload: {\n      data: favMovie\n    }\n  }\n}\n\nexport function clearFav() {\n  return {\n    type: 'CLEAR_FAV'\n  }\n}\n\nexport function delFav(id) {\n  return {\n    type: 'DEL_FAV',\n    payload: {\n      data: id\n    }\n  }\n}\n\nexport function onSearchUpdate(query) {\n  return {\n    type: 'ON_SEARCH_UPDATE',\n    payload: {\n      data: query\n    }\n  }\n}\n\nexport function fetchRes(resData) {\n  console.log(resData)\n  return {\n    type: 'FETCH_RES',\n    payload: {\n      data: resData\n    }\n  }\n}\n\nexport function fetchMovies(query) {\n  return function (dispatch) {\n    fetch(`https://www.omdbapi.com/?s=${query}&apikey=f860633b`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        return dispatch(fetchRes(data))\n      })\n  }\n}","import React, {Component} from 'react';\nimport './SearchBox.css';\nimport {connect} from 'react-redux';\nimport {fetchMovies, onSearchUpdate} from '../../redux/actions';\n\nclass SearchBox extends Component {\n\n  searchBoxSubmitHandler = (e) => {\n    e.preventDefault();\n    this.props.fetchMovies(this.props.inputValue);\n  }\n\n  render() {\n    const {inputValue} = this.props;\n\n    return (\n      <div className=\"search-box\">\n\n        <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\n          <label className=\"search-box__form-label\">\n            Искать фильм по названию:\n            <input\n              value={inputValue}\n              type=\"text\"\n              className=\"search-box__form-input\"\n              placeholder=\"Например, Shawshank Redemption\"\n              onChange={(e) => this.props.onSearchUpdate(e.target.value)}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"search-box__form-submit\"\n            disabled={!inputValue}\n          >\n            Искать\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({inputValue: state.inputValue})\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchUpdate: (query) => dispatch(onSearchUpdate(query)),\n  fetchMovies: (query) => dispatch(fetchMovies(query))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);","import React, {Component} from 'react';\nimport './MovieItem.css';\nimport {connect} from 'react-redux';\nimport {addToFav } from '../../redux/actions';\n\nclass MovieItem extends Component {\n\n  render() {\n    const {imdbID, Title, Year, Poster} = this.props;\n    return (\n      <article className=\"movie-item\">\n        <img className=\"movie-item__poster\"\n             src={Poster}\n             alt={Title}\n        />\n        <div className=\"movie-item__info\">\n          <h3 className=\"movie-item__title\">\n            {Title}&nbsp;({Year})\n          </h3>\n          <button onClick={() => this.props.addToFav(imdbID)}\n                  type=\"button\"\n                  disabled={this.props.favMovies.some((el)=>el.imdbID === imdbID)}\n                  className=\"movie-item__add-button\">\n                    \n            Добавить в\n            список\n          </button>\n        </div>\n      </article>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addToFav: (id) => dispatch(addToFav(id))\n})\n\nexport default connect(state => ({favMovies: state.favMovies}), mapDispatchToProps)(MovieItem);","import React, { Component } from 'react';\nimport MovieItem from '../MovieItem/MovieItem';\nimport './Movies.css';\nimport { connect } from 'react-redux';\n\nclass Movies extends Component {\n   \n    render() { \n        return ( \n            <ul className=\"movies\">\n                {this.props.allMovies.Search.map((movie) => {\n                    return (\n                    <li className=\"movies__item\" key={movie.imdbID}>\n                        <MovieItem {...movie} />\n                    </li>\n                )}\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default connect(state=> ({ allMovies: state.allMovies}), null)(Movies);\n","import React, { Component } from 'react';\nimport './Favorites.css';\nimport { connect } from 'react-redux';\nimport { delFav, clearFav } from '../../redux/actions'\n\n\nclass Favorites extends Component {\n\n  state = {\n    // это приходит с сервера\n    savedLists: [],\n    listTitle: ''\n  }\n\n  saveList = () => {\n    fetch('https://acb-api.algoritmika.org/api/movies/list', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      // отдаем серверу\n      body: JSON.stringify({\n        \"title\": this.state.listTitle,\n        \"movies\": this.props.favMovies.map((item) => item.imdbID)\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState((oldState) => ({\n          savedLists: [...oldState.savedLists, { id: data.id, name: data.title }],\n          listTitle: ''\n        }));\n        this.props.clearFav()\n      })\n      .catch(error => {\n        console.log('Произошла ошибка')\n      })\n  }\n\n  titleChange = (query) => {\n    this.setState({ listTitle: query })\n  }\n\n  render() {\n\n\n    return (\n      <div className=\"favorites\">\n        <input value={this.state.listTitle} placeholder='Например: комедии'\n          type=\"text\"\n          onChange={(e) => this.titleChange(e.target.value)}\n          className=\"favorites__name\" />\n        <ul className=\"favorites__list\">\n          {this.props.favMovies.map((item) => {\n            return <li key={item.imdbID}>{item.Title} ({item.Year})\n              <button onClick={() => this.props.delFav(item.imdbID)}\n                className=\"favorites__delete\"\n                type=\"button\">\n              </button></li>;\n          })}\n        </ul>\n        <button onClick={() => this.saveList()} type=\"button\"\n          className=\"favorites__save\">Сохранить список</button>\n\n        {this.state.savedLists.map.length > 0 &&\n          this.state.savedLists.map(({ id, name }) => (<p key={id} >\n            <a href={`/list/${id}`} target={'_blank'} rel=\"noopener noreferrer\">Открыть список: {name}</a>\n          </p>))}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  delFav: (id) => dispatch(delFav(id)),\n  clearFav: () => dispatch(clearFav())\n})\n\nexport default connect(state => ({ favMovies: state.favMovies }), mapDispatchToProps)(Favorites)\n","import React, { Component } from 'react';\nimport './MainPage.css';\nimport Header from '../../components/Header/Header';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport Movies from '../../components/Movies/Movies';\nimport Favorites from '../../components/Favorites/Favorites';\n\nclass MainPage extends Component {\n    render() { \n        return (\n            <div className=\"main-page\">\n                <Header />\n                <main className=\"main-page__content\">\n                    <section className=\"main-page__main-section\">\n                        <div className=\"main-page__search-box\">\n                            <SearchBox />\n                        </div>\n                        <div className=\"main-page__movies\">\n                            <Movies />\n                        </div>\n                    </section>\n                    <aside className=\"main-page__favorites\">\n                        <Favorites />\n                    </aside>\n                </main>\n            </div>\n        );\n    }\n}\n \nexport default MainPage;","import React, { Component } from 'react';\nimport './ListPage.css';\n\nclass ListPage extends Component {\n  state = {\n    favListId: [],\n    favListTitle: '',\n    favListMovies: []\n  }\n\n\n  fetchList = (id) => {\n    fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ favListId: data.movies, favListTitle: data.title })\n        const listMovies = data.movies.map((id)=> {\n          console.log(id)\n           return this.getMovies(id)\n        })\n        console.log(listMovies)\n        return Promise.all(listMovies)\n      })\n      .then(list => {\n        console.log(list)\n        this.setState({ favListMovies: list })\n      })\n  }\n\n  getMovies = (id) => {\n    return fetch(`https://www.omdbapi.com/?i=${id}&apikey=f860633b`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        return data\n      })\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(id);\n    this.fetchList(id)\n  }\n\n  render() {\n\n    if (this.state.favListMovies.length === 0) {\n     return ( <p>Список загружается</p>\n     )}\n    return (\n      <div className=\"list-page\">\n        <h1 className=\"list-page__title\">{this.state.favListTitle}</h1>\n        <ul>\n          {this.state.favListMovies.map((item) => {\n            return (\n              <li key={item.imdbID}>\n                <a href={`https://www.imdb.com/title/${item.imdbID}/`} target=\"_blank\" \n                rel=\"noopener noreferrer\">{item.Title} ({item.Year})</a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ListPage","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage/MainPage';\nimport ListPage from './pages/ListPage/ListPage';\n\nimport './reset.css';\nimport './common.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/list/:id\" exact component={ListPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}